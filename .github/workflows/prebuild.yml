name: Prebuild and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  prebuild:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libxtst-dev libxt-dev
      - name: Install dependencies
        run: npm install
      - name: Build TypeScript
        run: npm run build-ts
      - name: Prebuild
        run: npm run prebuild
      - name: Upload prebuilds
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}
          path: prebuilds/

  publish:
    needs: prebuild
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm install
      - name: Build TypeScript
        run: npm run build-ts
      - name: Download all prebuilds
        uses: actions/download-artifact@v4
        with:
          path: prebuilds-temp/
      - name: Organize prebuilds
        run: |
          mkdir -p prebuilds
          cp -r prebuilds-temp/prebuilds-ubuntu-latest/* prebuilds/ 2>/dev/null || true
          cp -r prebuilds-temp/prebuilds-windows-latest/* prebuilds/ 2>/dev/null || true
          cp -r prebuilds-temp/prebuilds-macos-latest/* prebuilds/ 2>/dev/null || true
          ls -la prebuilds/
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}